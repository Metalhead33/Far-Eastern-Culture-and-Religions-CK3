namespace = eastern_culture

# TURKEY

eastern_culture.0001 = {
	type = character_event
	title = eastern_culture.0001.t
	desc = eastern_culture.0001.desc
	theme = culture_change
	left_portrait = scope:anatolian_turkish_founder

	immediate = {
		show_as_tooltip = {
			custom_tooltip = global_culture.custom.merge_culture
			culture:anatolian_turkish = {
				get_all_innovations_from = culture:greek
			}
		}
	}

	option = {
		name = eastern_culture.0001.a
	}
}

eastern_culture.0002 = {
	type = character_event
	title = eastern_culture.0002.t
	desc = eastern_culture.0002.desc
	theme = culture_change
	left_portrait = scope:anatolian_turkish_founder

	immediate = {
		show_as_tooltip = {
			custom_tooltip = global_culture.custom.merge_culture
			culture:anatolian_turkish = {
				get_all_innovations_from = culture:greek
			}
		}
	}

	option = {
		name = eastern_culture.0002.a
	}
}

eastern_culture.0003 = {
	type = character_event
	title = eastern_culture.0003.t
	desc = eastern_culture.0003.desc
	theme = culture_change
	left_portrait = scope:anatolian_turkish_founder

	immediate = {
		show_as_tooltip = {
			culture:anatolian_turkish = {
				get_all_innovations_from = culture:greek
			}
		}
	}

	option = {
		name = eastern_culture.0003.a
	}
}

scripted_trigger valid_for_anatolian_turkish_ruler_culture_trigger = {
	tier = tier_county
	exists = holder
	is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_anatolian_turkish_decision
	}
	NOT = { exists = var:had_anatolian_turkish_county_conversion }
	title_province = {
		geographical_region = ghw_region_anatolia
	}
	OR = {
		AND = {
			holder.culture = culture:turkish
			culture = culture:greek
		}
		AND = {
			holder.culture = culture:greek
			culture = culture:turkish
		}
	}
}
scripted_trigger valid_for_anatolian_turkish_organic_culture_trigger = {
	tier = tier_county
	exists = holder
	title_province = {
		geographical_region = ghw_region_anatolia
	}
	NOT = { exists = var:had_anatolian_turkish_county_conversion }
	NOT = { culture = holder.culture } # No conversion for counties who match their holder's culture
	OR = {
		culture = culture:greek
		culture = culture:turkish
	}
	any_neighboring_county = {
		culture = culture:anatolian_turkish
	}
}

# Create Anatolian Turkish culture

eastern_culture.0004 = {
	type = character_event
	title = eastern_culture.0004.t
	desc = eastern_culture.0004.desc
	theme = culture_change
	left_portrait = root
	
	trigger = {
		OR = {
			culture = culture:turkish
			culture = culture:greek
		}
		any_held_title = {
			valid_for_anatolian_turkish_ruler_culture_trigger = yes
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 2
			culture = culture:turkish
		}
	}

	immediate = {
		random_held_title = {
			limit = {
				valid_for_anatolian_turkish_ruler_culture_trigger = yes
			}
			weight = { # Try to approximate organic spread
				base = 1
				modifier = {
					add = 4
					any_neighboring_county = {
						culture = culture:anatolian_turkish
					}
				}
			}
			save_scope_as = county_to_change
			culture = {
				save_scope_as = old_culture
			}
			set_variable = {
				name = had_anatolian_turkish_county_conversion
				value = yes
			}
		}
		culture:anatolian_turkish = {
			save_scope_as = anatolian_turkish # For loc
		}
		debug_log = "Converted a province to Anatolian Turkish from eastern_culture.0004"
	}

	option = {
		name = eastern_culture.0004.a
		scope:county_to_change = {
			set_county_culture = culture:anatolian_turkish
		}
	}
}

# Organically spread Anatolian Turkish culture


eastern_culture.0005 = {
	type = character_event
	title = eastern_culture.0004.t
	desc = eastern_culture.0004.desc
	theme = culture_change
	left_portrait = root
	
	trigger = {
		culture = culture:anatolian_turkish
		any_held_title = {
			valid_for_anatolian_turkish_organic_culture_trigger = yes
		}
	}

	immediate = {
		random_held_title = {
			limit = { valid_for_anatolian_turkish_organic_culture_trigger = yes }
			save_scope_as = county_to_change
			culture = {
				save_scope_as = old_culture
			}
			set_variable = {
				name = had_anatolian_turkish_county_conversion
				value = yes
			}
		}
		culture:anatolian_turkish = {
			save_scope_as = anatolian_turkish # For loc
		}
		debug_log = "Converted a province to Anatolian Turkish from eastern_culture.0005"
	}

	option = {
		name = eastern_culture.0005.a
		scope:county_to_change = {
			set_county_culture = culture:anatolian_turkish
		}
	}
}

# AZERBAIJAN

eastern_culture.0006 = {
	type = character_event
	title = eastern_culture.0006.t
	desc = eastern_culture.0006.desc
	theme = culture_change
	left_portrait = scope:azeri_turkish_founder

	immediate = {
		show_as_tooltip = {
			custom_tooltip = global_culture.custom.merge_culture
			culture:azeri_turkish = {
				get_all_innovations_from = culture:persian
			}
		}
	}

	option = {
		name = eastern_culture.0006.a
	}
}

eastern_culture.0007 = {
	type = character_event
	title = eastern_culture.0007.t
	desc = eastern_culture.0007.desc
	theme = culture_change
	left_portrait = scope:azeri_turkish_founder

	immediate = {
		show_as_tooltip = {
			custom_tooltip = global_culture.custom.merge_culture
			culture:azeri_turkish = {
				get_all_innovations_from = culture:persian
			}
		}
	}

	option = {
		name = eastern_culture.0007.a
	}
}

eastern_culture.0008 = {
	type = character_event
	title = eastern_culture.0008.t
	desc = eastern_culture.0008.desc
	theme = culture_change
	left_portrait = scope:azeri_turkish_founder

	immediate = {
		show_as_tooltip = {
			culture:azeri_turkish = {
				get_all_innovations_from = culture:persian
			}
		}
	}

	option = {
		name = eastern_culture.0008.a
	}
}

scripted_trigger valid_for_azeri_turkish_ruler_culture_trigger = {
	tier = tier_county
	exists = holder
	is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_azeri_turkish_decision
	}
	NOT = { exists = var:had_azeri_turkish_county_conversion }
	title_province = {
		geographical_region = special_azeri_culture_region # d_shirvan d_azerbaijan
	}
	OR = {
		AND = {
			holder.culture = culture:turkish
			culture = culture:persian
		}
		AND = {
			holder.culture = culture:persian
			culture = culture:turkish
		}
	}
}
scripted_trigger valid_for_azeri_turkish_organic_culture_trigger = {
	tier = tier_county
	exists = holder
	title_province = {
		geographical_region = special_azeri_culture_region
	}
	NOT = { exists = var:had_azeri_turkish_county_conversion }
	NOT = { culture = holder.culture } # No conversion for counties who match their holder's culture
	OR = {
		culture = culture:persian
		culture = culture:turkish
	}
	any_neighboring_county = {
		culture = culture:azeri_turkish
	}
}

# Create Anatolian Turkish culture

eastern_culture.0009 = {
	type = character_event
	title = eastern_culture.0009.t
	desc = eastern_culture.0009.desc
	theme = culture_change
	left_portrait = root
	
	trigger = {
		OR = {
			culture = culture:turkish
			culture = culture:persian
		}
		any_held_title = {
			valid_for_azeri_turkish_ruler_culture_trigger = yes
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 2
			culture = culture:turkish
		}
	}

	immediate = {
		random_held_title = {
			limit = {
				valid_for_azeri_turkish_ruler_culture_trigger = yes
			}
			weight = { # Try to approximate organic spread
				base = 1
				modifier = {
					add = 4
					any_neighboring_county = {
						culture = culture:azeri_turkish
					}
				}
			}
			save_scope_as = county_to_change
			culture = {
				save_scope_as = old_culture
			}
			set_variable = {
				name = had_azeri_turkish_county_conversion
				value = yes
			}
		}
		culture:azeri_turkish = {
			save_scope_as = azeri_turkish # For loc
		}
		debug_log = "Converted a province to Anatolian Turkish from eastern_culture.0009"
	}

	option = {
		name = eastern_culture.0009.a
		scope:county_to_change = {
			set_county_culture = culture:azeri_turkish
		}
	}
}

# Organically spread Anatolian Turkish culture

eastern_culture.0010 = {
	type = character_event
	title = eastern_culture.0009.t
	desc = eastern_culture.0009.desc
	theme = culture_change
	left_portrait = root
	
	trigger = {
		culture = culture:azeri_turkish
		any_held_title = {
			valid_for_azeri_turkish_organic_culture_trigger = yes
		}
	}

	immediate = {
		random_held_title = {
			limit = { valid_for_azeri_turkish_organic_culture_trigger = yes }
			save_scope_as = county_to_change
			culture = {
				save_scope_as = old_culture
			}
			set_variable = {
				name = had_azeri_turkish_county_conversion
				value = yes
			}
		}
		culture:azeri_turkish = {
			save_scope_as = azeri_turkish # For loc
		}
		debug_log = "Converted a province to Anatolian Turkish from eastern_culture.0010"
	}

	option = {
		name = eastern_culture.0010.a
		scope:county_to_change = {
			set_county_culture = culture:azeri_turkish
		}
	}
}
# Seed with culture-specific traits
eastern_culture.0011 = {
    type = character_event
	hidden = yes
    title = eastern_culture.11
    desc = eastern_culture.11.desc
	theme = pregnancy
	trigger = {
		NOT = { has_character_flag = circassian_seeded }
		is_alive = yes
	}
    immediate = {
		if = {
			limit = {
				NOT = { has_trait = beauty_good_3 }
				culture = { has_cultural_parameter = beauty_trait_more_common }
			}
			random = {
				chance = 10
				if = {
					limit = { has_trait = beauty_good_2 }
					add_trait = beauty_good_3
				}
				else_if = {
					limit = { has_trait = beauty_good_1 }
					add_trait = beauty_good_2
				}
				else_if = {
					limit = {
						OR = {
							has_trait = beauty_bad_1
							has_trait = beauty_bad_2
							has_trait = beauty_bad_3
						}
					}
					add_trait = beauty_good_1
				}
				else = {
					add_trait = beauty_good_1
				}
			}
		}
		if = {
			limit = {
				culture = {
					has_cultural_tradition = tradition_diasporic
					has_cultural_pillar = heritage_gypsy
				}
				is_ruler = no
			}
			if = {
				limit = { is_female = yes}
				name_from_local_culture_with_fallback_female = yes
			}
			else = {
				name_from_local_culture_with_fallback_male = yes
			}
			if = {
				limit = { exists = location }
				learn_language_of_culture = location.culture
			}
		}
		if = {
			limit = {
				OR = {
					culture = { has_cultural_parameter = cat_preference_more_common }
					faith = { has_doctrine_parameter = cat_preference_more_common }
				}
			}
			random = {
				chance = 33
				add_trait = cat_preference
			}
		}
		if = {
			limit = {
				OR = {
					culture = { has_cultural_parameter = dog_preference_more_common }
					faith = { has_doctrine_parameter = dog_preference_more_common }
				}
			}
			random = {
				chance = 33
				add_trait = dog_preference
			}
		}
		if = {
			limit = {
				OR = {
					culture = { has_cultural_parameter = bird_preference_more_common }
					faith = { has_doctrine_parameter = bird_preference_more_common }
				}
			}
			random = {
				chance = 33
				add_trait = bird_preference
			}
		}
		if = {
			limit = {
				OR = {
					culture = { has_cultural_parameter = rodent_preference_more_common }
					faith = { has_doctrine_parameter = rodent_preference_more_common }
				}
			}
			random = {
				chance = 33
				add_trait = rodent_preference
			}
		}
		add_character_flag = circassian_seeded
    }
}
eastern_culture.0012 = {
	type = empty
	hidden = yes

	immediate = {
		every_county = {

			# Jews
			remove_county_modifier = jewish_community_very_large
			remove_county_modifier = jewish_community_large
			remove_county_modifier = jewish_community_small
			remove_county_modifier = jewish_community_very_small
			if = {
				limit = {
					has_variable = ashkenazi_presence
					has_variable = sephardi_presence
					has_variable = mizrahi_presence
					has_variable = radhanim_presence
					has_variable = kochinim_presence
					has_variable = kaifeng_presence
				}
				change_variable = {
					name = ashkenazi_presence
					multiply = 1.008
				}
				change_variable = {
					name = sephardi_presence
					multiply = 1.008
				}
				change_variable = {
					name = mizrahi_presence
					multiply = 1.008
				}
				change_variable = {
					name = radhanim_presence
					multiply = 1.008
				}
				change_variable = {
					name = kochinim_presence
					multiply = 1.008
				}
				change_variable = {
					name = kaifeng_presence
					multiply = 1.008
				}
				set_local_variable = {
					name = saved_ashkenazi_overflow
					value = this.ashkenazi_overflow
				}
				set_local_variable = {
					name = saved_sephardi_overflow
					value = this.sephardi_overflow
				}
				set_local_variable = {
					name = saved_mizrahi_overflow
					value = this.mizrahi_overflow
				}
				set_local_variable = {
					name = saved_radhanim_overflow
					value = this.radhanim_overflow
				}
				set_local_variable = {
					name = saved_kochinim_overflow
					value = this.kochinim_overflow
				}
				set_local_variable = {
					name = saved_kaifeng_overflow
					value = this.kaifeng_overflow
				}
				clamp_variable = {
					name = ashkenazi_presence
					min = 0.0
					max = this.ashkenazi_carrying_capacity
				}
				clamp_variable = {
					name = sephardi_presence
					min = 0.0
					max = this.sephardi_carrying_capacity
				}
				clamp_variable = {
					name = mizrahi_presence
					min = 0.0
					max = this.mizrahi_carrying_capacity
				}
				clamp_variable = {
					name = radhanim_presence
					min = 0.0
					max = this.radhanim_carrying_capacity
				}
				clamp_variable = {
					name = kochinim_presence
					min = 0.0
					max = this.kochinim_carrying_capacity
				}
				clamp_variable = {
					name = kaifeng_presence
					min = 0.0
					max = this.kaifeng_carrying_capacity
				}
				set_local_variable = {
					name = total_neighbouring_development
					value = 0
				}
				# Now we use the saved overflow values, somehow?
				every_title_to_title_neighboring_and_across_water_county = {
					limit = {
						any_county_province = { has_holding_type = city_holding }
						NOT = { holder.top_liege = { has_character_modifier = expelled_the_jews } }
					}
					add_to_list = jew_receiving_counties
					change_local_variable = {
						name = total_neighbouring_development
						add = this.jewish_carrying_capacity
					}
				}
				if = {
					limit = { local_var:total_neighbouring_development > 0 }
					if = {
						limit = { local_var:saved_ashkenazi_overflow > 0 }
						change_local_variable = {
							name = saved_ashkenazi_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					if = {
						limit = { local_var:saved_sephardi_overflow > 0 }
						change_local_variable = {
							name = saved_sephardi_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					if = {
						limit = { local_var:saved_mizrahi_overflow > 0 }
						change_local_variable = {
							name = saved_mizrahi_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					if = {
						limit = { local_var:saved_radhanim_overflow > 0 }
						change_local_variable = {
							name = saved_radhanim_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					if = {
						limit = { local_var:saved_kochinim_overflow > 0 }
						change_local_variable = {
							name = saved_kochinim_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					if = {
						limit = { local_var:saved_kaifeng_overflow > 0 }
						change_local_variable = {
							name = saved_kaifeng_overflow
							divide = local_var:total_neighbouring_development
						}
					}
					every_in_list = {
						list = jew_receiving_counties
						set_local_variable = {
							name = ashkenazim_evacuated
							value = local_var:saved_ashkenazi_overflow
						}
						change_local_variable = {
							name = ashkenazim_evacuated
							multiply = this.jewish_carrying_capacity
						}
						set_local_variable = {
							name = sephardim_evacuated
							value = local_var:saved_sephardi_overflow
						}
						change_local_variable = {
							name = sephardim_evacuated
							multiply = this.jewish_carrying_capacity
						}
						set_local_variable = {
							name = mizrahim_evacuated
							value = local_var:saved_radhanim_overflow
						}
						change_local_variable = {
							name = mizrahim_evacuated
							multiply = this.jewish_carrying_capacity
						}
						set_local_variable = {
							name = radhanim_evacuated
							value = local_var:saved_kaifeng_overflow
						}
						change_local_variable = {
							name = radhanim_evacuated
							multiply = this.jewish_carrying_capacity
						}
						set_local_variable = {
							name = kochinim_evacuated
							value = local_var:saved_kochinim_overflow
						}
						change_local_variable = {
							name = kochinim_evacuated
							multiply = this.jewish_carrying_capacity
						}
						set_local_variable = {
							name = kaifeng_evacuated
							value = local_var:saved_kaifeng_overflow
						}
						change_local_variable = {
							name = kaifeng_evacuated
							multiply = this.jewish_carrying_capacity
						}
						change_variable = {
							name = ashkenazi_presence
							add = local_var:ashkenazim_evacuated
						}
						change_variable = {
							name = sephardi_presence
							add = local_var:sephardim_evacuated
						}
						change_variable = {
							name = mizrahi_presence
							add = local_var:mizrahim_evacuated
						}
						change_variable = {
							name = radhanim_presence
							add = local_var:radhanim_evacuated
						}
						change_variable = {
							name = kochinim_presence
							add = local_var:kochinim_evacuated
						}
						change_variable = {
							name = kaifeng_presence
							add = local_var:kaifeng_evacuated
						}
					}
				}
				if = {
					limit = {
						this.jewish_presence >= 5
					}
					add_county_modifier = jewish_community_very_large
				}
				else_if = {
					limit = {
						this.jewish_presence >= 2.5
					}
					add_county_modifier = jewish_community_large
				}
				else_if = {
					limit = {
						this.jewish_presence >= 1
					}
					add_county_modifier = jewish_community_small
				}
				else_if = {
					limit = {
						this.jewish_presence >= 0.01
					}
					add_county_modifier = jewish_community_very_small
				}
			}
			# Gypsies
			remove_county_modifier = integrated_gypsy_community_very_small
			remove_county_modifier = oppressed_gypsy_community_very_small
			remove_county_modifier = integrated_gypsy_community_small
			remove_county_modifier = oppressed_gypsy_community_small
			remove_county_modifier = integrated_gypsy_community_large
			remove_county_modifier = oppressed_gypsy_community_large
			remove_county_modifier = integrated_gypsy_community_very_large
			remove_county_modifier = oppressed_gypsy_community_very_large
			if = {
				limit = {
					has_variable = gypsy_presence
				}
				if = {
					limit = {
						OR = {
							holder = { has_character_modifier = expelled_the_gypsies }
							holder.top_liege = { has_character_modifier = expelled_the_gypsies }
						}
					}
					change_variable = {
						name = gypsy_presence
						subtract = 0.1
					}
				}
				else_if = {
					limit = {
						any_neighboring_county = {
							OR = {
								holder = { has_character_modifier = expelled_the_gypsies }
								holder.top_liege = { has_character_modifier = expelled_the_gypsies }
							}
							var:gypsy_presence > 0.1
						}
					}
					change_variable = {
						name = gypsy_presence
						add = 0.085
					}
					change_variable = {
						name = gypsy_presence
						multiply = 1.008
					}
				}
				else = {
					change_variable = {
						name = gypsy_presence
						multiply = 1.008
					}
				}
				set_local_variable = {
					name = saved_gypsy_overflow
					value = this.gypsy_overflow
				}
				clamp_variable = {
					name = gypsy_presence
					min = 0.0
					max = diaspora_base_level
				}
				set_local_variable = {
					name = total_neighbouring_development
					value = 0
				}
				# Now we use the saved overflow values, somehow?
				if = {
					limit = { local_var:saved_gypsy_overflow > 0 }
					every_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { holder.top_liege = { has_character_modifier = expelled_the_gypsies } }
						}
						add_to_list = gypsy_receiving_counties
						change_local_variable = {
							name = total_neighbouring_development
							add = this.diaspora_base_level
						}
					}
					if = {
						limit = { local_var:total_neighbouring_development > 0 }
						change_local_variable = {
							name = saved_gypsy_overflow
							divide = local_var:total_neighbouring_development
						}
						every_in_list = {
							list = gypsy_receiving_counties
							set_local_variable = {
								name = gypsies_evacuated
								value = local_var:saved_gypsy_overflow
							}
							change_local_variable = {
								name = gypsies_evacuated
								multiply = this.diaspora_base_level
							}
							change_variable = {
								name = gypsy_presence
								add = local_var:gypsies_evacuated
							}
						}
					}
				}
				if = {
					limit = {
						this.var:gypsy_presence >= 5
					}
					if = {
						limit = {
							this.holder = { gypsy_free_realm = yes }
						}
						add_county_modifier = oppressed_gypsy_community_very_large
					}
					else = {
						add_county_modifier = integrated_gypsy_community_very_large
					}
				}
				else_if = {
					limit = {
						this.var:gypsy_presence >= 2.5
					}
					if = {
						limit = {
							this.holder = { gypsy_free_realm = yes }
						}
						add_county_modifier = oppressed_gypsy_community_large
					}
					else = {
						add_county_modifier = integrated_gypsy_community_large
					}
				}
				else_if = {
					limit = {
						this.var:gypsy_presence >= 1
					}
					if = {
						limit = {
							this.holder = { gypsy_free_realm = yes }
						}
						add_county_modifier = oppressed_gypsy_community_small
					}
					else = {
						add_county_modifier = integrated_gypsy_community_small
					}
				}
				else_if = {
					limit = {
						this.var:gypsy_presence >= 0.05
					}
					if = {
						limit = {
							this.holder = { gypsy_free_realm = yes }
						}
						add_county_modifier = oppressed_gypsy_community_very_small
					}
					else = {
						add_county_modifier = integrated_gypsy_community_very_small
					}
				}
			}
		}
	}
}
